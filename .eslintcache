[{"C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\index.js":"1","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\app\\App.js":"2","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\header\\index.js":"3","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\register\\index.js":"4","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\login\\index.js":"5","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\todoList\\index.js":"6","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\privateRoute\\index.js":"7","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\alertBox\\index.js":"8","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\context\\authContext.js":"9","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\todoList\\data.js":"10","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\todoItem\\index.js":"11","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\loadingSpinner\\index.js":"12","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\logoutBtn\\index.js":"13"},{"size":353,"mtime":1612053494960,"results":"14","hashOfConfig":"15"},{"size":596,"mtime":1613050469471,"results":"16","hashOfConfig":"15"},{"size":1721,"mtime":1613051130783,"results":"17","hashOfConfig":"15"},{"size":3737,"mtime":1613047795533,"results":"18","hashOfConfig":"15"},{"size":3542,"mtime":1613047598033,"results":"19","hashOfConfig":"15"},{"size":7149,"mtime":1613050503610,"results":"20","hashOfConfig":"15"},{"size":444,"mtime":1612053494954,"results":"21","hashOfConfig":"15"},{"size":722,"mtime":1611935531571,"results":"22","hashOfConfig":"15"},{"size":691,"mtime":1612053494959,"results":"23","hashOfConfig":"15"},{"size":447,"mtime":1612275557724,"results":"24","hashOfConfig":"15"},{"size":1973,"mtime":1612473011502,"results":"25","hashOfConfig":"15"},{"size":388,"mtime":1613046794741,"results":"26","hashOfConfig":"15"},{"size":547,"mtime":1613050475325,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"54g64j",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\index.js",[],["57","58"],"C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\app\\App.js",[],"C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\header\\index.js",["59","60","61","62","63"],"C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\register\\index.js",["64"],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport Header from \"../header\";\r\nimport AlertBox from \"../alertBox\";\r\nimport LoadingSpinner from \"../loadingSpinner\";\r\nimport { Button, Input } from \"@chakra-ui/react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuthContext } from \"../../context/authContext.js\";\r\n\r\nexport default function Register() {\r\n  const [formData, setFormData] = useState({});\r\n  const [error, setError] = useState();\r\n  const [success, setSuccess] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const { user, setAuth } = useAuthContext();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (user._id) {\r\n      history.push(\"/todoList\");\r\n    }\r\n  }, [user]);\r\n\r\n  function handleChange(e) {\r\n    setFormData({ ...formData, [e.target.id]: e.target.value });\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    console.log(formData);\r\n    const response = await fetch(\r\n      `${process.env.REACT_APP_SERVER_URL}/user/register`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(formData),\r\n      }\r\n    );\r\n    const { success, message, user } = await response.json();\r\n    if (success) {\r\n      // Activate a success message, proceed as logged in.\r\n      if (error) setError(false);\r\n      setSuccess(\"You have successfully registered!\");\r\n      setAuth({ type: \"register\", payload: user });\r\n      setLoading(false);\r\n    } else {\r\n      // display a error message\r\n      if (success) setSuccess(false);\r\n      setError(message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main className={styles.main}>\r\n        {error && (\r\n          <AlertBox\r\n            type=\"error\"\r\n            title=\"Error!\"\r\n            message={error}\r\n            close={setError}\r\n          />\r\n        )}\r\n        {success && (\r\n          <AlertBox\r\n            type=\"success\"\r\n            title=\"Success!\"\r\n            message={success}\r\n            close={setSuccess}\r\n          />\r\n        )}\r\n        <div className={styles.welcomeContainer}>\r\n          {loading && <LoadingSpinner />}\r\n          <div className={styles.welcomeDiv}>\r\n            <h3>Welcome!</h3>\r\n            <p>Register now for your own personal todo list!</p>\r\n            <p className={styles.loginLink}>\r\n              Already have an account?{\" \"}\r\n              <span>\r\n                <Link to=\"/login\">Log In!</Link>\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className={styles.registerDiv}>\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n              <label htmlFor=\"name\">Name</label>\r\n              <Input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                size=\"md\"\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                size=\"md\"\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                id=\"password\"\r\n                type=\"password\"\r\n                size=\"md\"\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                colorScheme=\"green\"\r\n                disabled={loading ? true : false}\r\n              >\r\n                Register\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\login\\index.js",["65"],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport Header from \"../header\";\r\nimport AlertBox from \"../alertBox\";\r\nimport LoadingSpinner from \"../loadingSpinner\";\r\nimport { Button, Input } from \"@chakra-ui/react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuthContext } from \"../../context/authContext\";\r\n\r\nexport default function Login() {\r\n  const [formData, setFormData] = useState({});\r\n  const [error, setError] = useState();\r\n  const [success, setSuccess] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const { user, setAuth } = useAuthContext();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (user.id) {\r\n      history.push(\"/todoList\");\r\n    }\r\n  }, [user]);\r\n\r\n  function handleChange(e) {\r\n    setFormData({ ...formData, [e.target.id]: e.target.value });\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    console.log(formData);\r\n    const response = await fetch(\r\n      `${process.env.REACT_APP_SERVER_URL}/user/login`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(formData),\r\n      }\r\n    );\r\n    const { success, message, token, user } = await response.json();\r\n    if (success) {\r\n      // Activate a success message, proceed as logged in.\r\n      localStorage.setItem(\"token\", token);\r\n      setAuth({ type: \"login\", payload: user });\r\n      if (error) setError(false);\r\n      setSuccess(message);\r\n      setLoading(false);\r\n      history.push(\"/todoList\");\r\n    } else {\r\n      // display a error message\r\n      if (success) setSuccess(false);\r\n      setError(message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main className={styles.main}>\r\n        {error && (\r\n          <AlertBox\r\n            type=\"error\"\r\n            title=\"Error!\"\r\n            message={error}\r\n            close={setError}\r\n          />\r\n        )}\r\n        {success && (\r\n          <AlertBox\r\n            type=\"success\"\r\n            title=\"Success!\"\r\n            message={success}\r\n            close={setSuccess}\r\n          />\r\n        )}\r\n        <div className={styles.welcomeContainer}>\r\n          {loading && <LoadingSpinner />}\r\n          <div className={styles.welcomeDiv}>\r\n            <h3>Welcome!</h3>\r\n            <p>Log in now to access your todo list!</p>\r\n            <p className={styles.regLink}>\r\n              Need an account?{\" \"}\r\n              <span>\r\n                <Link to=\"/register\">Register!</Link>\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className={styles.registerDiv}>\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                size=\"md\"\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                id=\"password\"\r\n                type=\"password\"\r\n                size=\"md\"\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                colorScheme=\"green\"\r\n                disabled={loading ? true : false}\r\n              >\r\n                Log In\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\todoList\\index.js",["66","67"],"C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\privateRoute\\index.js",[],"C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\alertBox\\index.js",[],"C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\context\\authContext.js",[],"C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\todoList\\data.js",[],"C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\todoItem\\index.js",[],"C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\loadingSpinner\\index.js",[],"C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\logoutBtn\\index.js",["68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":10,"column":3,"nodeType":"75","messageId":"76","endLine":10,"endColumn":17},{"ruleId":"73","severity":1,"message":"77","line":12,"column":3,"nodeType":"75","messageId":"76","endLine":12,"endColumn":18},{"ruleId":"73","severity":1,"message":"78","line":13,"column":3,"nodeType":"75","messageId":"76","endLine":13,"endColumn":11},{"ruleId":"73","severity":1,"message":"79","line":14,"column":3,"nodeType":"75","messageId":"76","endLine":14,"endColumn":14},{"ruleId":"73","severity":1,"message":"80","line":19,"column":27,"nodeType":"75","messageId":"76","endLine":19,"endColumn":42},{"ruleId":"81","severity":1,"message":"82","line":22,"column":6,"nodeType":"83","endLine":22,"endColumn":12,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"82","line":22,"column":6,"nodeType":"83","endLine":22,"endColumn":12,"suggestions":"85"},{"ruleId":"73","severity":1,"message":"86","line":9,"column":10,"nodeType":"75","messageId":"76","endLine":9,"endColumn":18},{"ruleId":"81","severity":1,"message":"87","line":33,"column":6,"nodeType":"83","endLine":33,"endColumn":8,"suggestions":"88"},{"ruleId":"73","severity":1,"message":"89","line":7,"column":11,"nodeType":"75","messageId":"76","endLine":7,"endColumn":15},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'MenuItemOption' is defined but never used.","Identifier","unusedVar","'MenuOptionGroup' is defined but never used.","'MenuIcon' is defined but never used.","'MenuCommand' is defined but never used.","'ChevronLeftIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["92"],["93"],"'listData' is defined but never used.","React Hook useEffect has missing dependencies: 'logout' and 'user.name'. Either include them or remove the dependency array.",["94"],"'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"95","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [history, user]",{"range":"100","text":"101"},{"range":"102","text":"101"},"Update the dependencies array to be: [logout, user.name]",{"range":"103","text":"104"},[778,784],"[history, user]",[771,777],[1087,1089],"[logout, user.name]"]