[{"C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\index.js":"1","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\app\\App.js":"2","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\header\\index.js":"3","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\register\\index.js":"4","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\login\\index.js":"5","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\todoList\\index.js":"6","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\privateRoute\\index.js":"7","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\alertBox\\index.js":"8"},{"size":259,"mtime":1611703014462,"results":"9","hashOfConfig":"10"},{"size":577,"mtime":1611935531572,"results":"11","hashOfConfig":"10"},{"size":451,"mtime":1611700336562,"results":"12","hashOfConfig":"10"},{"size":3093,"mtime":1611935531576,"results":"13","hashOfConfig":"10"},{"size":2882,"mtime":1611935531573,"results":"14","hashOfConfig":"10"},{"size":137,"mtime":1611935531578,"results":"15","hashOfConfig":"10"},{"size":430,"mtime":1611935531575,"results":"16","hashOfConfig":"10"},{"size":722,"mtime":1611935531571,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"54g64j",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\index.js",[],["37","38"],"C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\app\\App.js",["39"],"import styles from \"./App.module.css\";\nimport Register from \"../register\";\nimport Login from \"../login\";\nimport TodoList from \"../todoList\";\nimport PrivateRoute from \"../privateRoute\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={TodoList} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/login\" component={Login} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\header\\index.js",[],"C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\register\\index.js",[],"C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\login\\index.js",["40"],"import React, { useState } from \"react\";\r\nimport styles from \"./index.module.css\";\r\nimport Header from \"../header\";\r\nimport AlertBox from \"../alertBox\";\r\nimport { Button, Input } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n  const [formData, setFormData] = useState({});\r\n  const [error, setError] = useState();\r\n  const [success, setSuccess] = useState();\r\n\r\n  function handleChange(e) {\r\n    setFormData({ ...formData, [e.target.id]: e.target.value });\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    const response = await fetch(\r\n      `${process.env.REACT_APP_SERVER_URL}/user/login`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(formData),\r\n      }\r\n    );\r\n    const { success, message, token } = await response.json();\r\n    if (success) {\r\n      // Activate a success message, proceed as logged in.\r\n      console.log(response.headers.get(\"auth-token\"));\r\n      if (error) setError(false);\r\n      setSuccess(message);\r\n    } else {\r\n      // display a error message\r\n      if (success) setSuccess(false);\r\n      setError(message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main className={styles.main}>\r\n        {error && (\r\n          <AlertBox\r\n            type=\"error\"\r\n            title=\"Error!\"\r\n            message={error}\r\n            close={setError}\r\n          />\r\n        )}\r\n        {success && (\r\n          <AlertBox\r\n            type=\"success\"\r\n            title=\"Success!\"\r\n            message={success}\r\n            close={setSuccess}\r\n          />\r\n        )}\r\n        <div className={styles.welcomeContainer}>\r\n          <div className={styles.welcomeDiv}>\r\n            <h3>Welcome!</h3>\r\n            <p>Log in now to access your todo list!</p>\r\n            <p className={styles.regLink}>\r\n              Need an account?{\" \"}\r\n              <span>\r\n                <Link to=\"/register\">Register!</Link>\r\n              </span>\r\n            </p>\r\n          </div>\r\n          <div className={styles.registerDiv}>\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                size=\"md\"\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                id=\"password\"\r\n                type=\"password\"\r\n                size=\"md\"\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n              <Button type=\"submit\" colorScheme=\"green\">\r\n                Log In\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\todoList\\index.js",[],"C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\privateRoute\\index.js",[],"C:\\Users\\jimuk\\Desktop\\SOC Staging\\theTodoProject\\todo-client\\src\\components\\alertBox\\index.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":14},{"ruleId":"45","severity":1,"message":"49","line":30,"column":31,"nodeType":"47","messageId":"48","endLine":30,"endColumn":36},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]